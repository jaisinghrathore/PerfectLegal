{"ast":null,"code":"var _jsxFileName = \"F:\\\\Tanu\\\\my-app\\\\src\\\\LocalStore.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Local = () => {\n  _s();\n\n  const [init, upda] = useState();\n\n  const change = e => {\n    upda(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Local storage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: change\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Local, \"zSFiJ71O9xa9oLIz2V/Y/80FIIU=\");\n\n_c = Local;\nexport default Local;\n\nvar _c;\n\n$RefreshReg$(_c, \"Local\");","map":{"version":3,"sources":["F:/Tanu/my-app/src/LocalStore.jsx"],"names":["React","Local","init","upda","useState","change","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAMA,MAAMC,KAAK,GAAC,MAAI;AAAA;;AAEZ,QAAK,CAACC,IAAD,EAAMC,IAAN,IAAYC,QAAQ,EAAzB;;AAGA,QAAMC,MAAM,GAAEC,CAAD,IAAK;AACfH,IAAAA,IAAI,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAJ;AACE,GAFL;;AAcA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEH;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAMH,CAzBD;;GAAMJ,K;;KAAAA,K;AA2BN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\nconst Local=()=>{\r\n\r\n    const[init,upda]=useState();\r\n\r\n\r\n    const change=(e)=>{\r\n       upda(e.target.value);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        <h1>Local storage</h1>      \r\n        <input type=\"text\" onChange={change}></input>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Local;"]},"metadata":{},"sourceType":"module"}