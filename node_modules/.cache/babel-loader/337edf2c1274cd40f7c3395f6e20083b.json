{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport { useCookies } from 'react-cookie';\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\nimport logo from \"./images/loggo.png\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Nav = () => {\n  _s();\n\n  const [cookies, setCookie, removeCookie] = useCookies(['cookie-name']);\n  const [hid, hidden] = useState({\n    width: '4.5rem',\n    height: '4.5rem',\n    backgroundColor: '#CDBA6D',\n    position: 'fixed',\n    bottom: \"20px\",\n    right: '14px',\n    borderRadius: '4px',\n    boxShadow: \"2px 2px 2px 1px #666666\",\n    zIndex: \"10\",\n    cursor: \"pointer\",\n    display: \"none\"\n  });\n  const [initialStyle, updatedStyle] = useState({\n    color: \"white\",\n    fontSize: \"1.6rem\"\n  });\n  const [initialStyleNav, updatedStyleNav] = useState({\n    backgroundColor: \"transparent\",\n    height: \"80px\",\n    zIndex: 1\n  });\n  const [initialStyleA, updatedStyleA] = useState({\n    width: \"120px\",\n    position: \"absolute\",\n    top: -10\n  });\n  const [state, setState] = React.useState({\n    checkedA: true\n  });\n\n  const clicky = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }; // state.checkedA==false?alert(\"hello\"):alert('hi');        \n\n\n  window.onscroll = () => {\n    if (window.scrollY > 20) {\n      updatedStyle({ ...initialStyle,\n        color: \"white\"\n      });\n      updatedStyleNav({ ...initialStyleNav,\n        backgroundColor: \"rgba(1,1,1,0.6)\"\n      });\n      updatedStyleA({ ...initialStyle,\n        width: \"80px\",\n        position: \"absolute\",\n        top: -10\n      });\n      hidden({ ...hid,\n        display: \"block\"\n      });\n    } else {\n      updatedStyleNav({ ...initialStyleNav,\n        backgroundColor: \"transparent\"\n      });\n      hidden({ ...hid,\n        display: \"none\"\n      });\n      updatedStyleA({ ...initialStyle,\n        width: \"120px\",\n        position: \"absolute\",\n        top: -10\n      });\n    }\n  }; // darkmode\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Nav, \"F7BTmhEFHd5ANYTk5uNyPoBJu2c=\", false, function () {\n  return [useCookies];\n});\n\n_c = Nav;\nexport default Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["F:/Tanu/my-app/src/Nav.jsx"],"names":["React","useEffect","useState","Switch","useCookies","Link","FontAwesomeIcon","faArrowUp","logo","MenuIcon","Nav","cookies","setCookie","removeCookie","hid","hidden","width","height","backgroundColor","position","bottom","right","borderRadius","boxShadow","zIndex","cursor","display","initialStyle","updatedStyle","color","fontSize","initialStyleNav","updatedStyleNav","initialStyleA","updatedStyleA","top","state","setState","checkedA","clicky","document","body","scrollTop","documentElement","window","onscroll","scrollY"],"mappings":"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","sourcesContent":["import React , {useEffect,useState} from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { useCookies } from 'react-cookie';\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons'\r\nimport logo from \"./images/loggo.png\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\n\r\nconst Nav=()=>{\r\n    \r\n    const [cookies, setCookie, removeCookie] = useCookies(['cookie-name']);\r\n    const[hid,hidden]=useState({\r\n      width:'4.5rem',height:'4.5rem',backgroundColor:'#CDBA6D',position:'fixed',bottom:\"20px\",right:'14px',borderRadius:'4px',boxShadow:\"2px 2px 2px 1px #666666\",zIndex:\"10\",cursor:\"pointer\",display:\"none\"\r\n  });\r\n\r\n\r\n    const[initialStyle,updatedStyle]=useState(\r\n      {\r\n        color:\"white\",\r\n        fontSize:\"1.6rem\"\r\n\r\n      }\r\n    );\r\n    const[initialStyleNav,updatedStyleNav]=useState(\r\n      {\r\n        backgroundColor:\"transparent\",\r\n        height:\"80px\",\r\n        zIndex:1\r\n      }\r\n    );\r\n    const[initialStyleA,updatedStyleA]=useState(\r\n      {\r\n        width:\"120px\",\r\n        position:\"absolute\",\r\n        top:-10\r\n      }\r\n    );\r\n\r\n\r\n            const [state, setState] = React.useState({\r\n          checkedA: true\r\n        });\r\n      \r\n  const clicky=()=>{\r\n            document.body.scrollTop = 0;\r\n            document.documentElement.scrollTop = 0;\r\n        }\r\n\r\n\r\n                 \r\n\r\n        // state.checkedA==false?alert(\"hello\"):alert('hi');        \r\n\r\n        window.onscroll=()=>{\r\n          if(window.scrollY>20){\r\n                updatedStyle({...initialStyle,color:\"white\"})\r\n                updatedStyleNav({...initialStyleNav,backgroundColor:\"rgba(1,1,1,0.6)\"})\r\n                updatedStyleA({...initialStyle,  width:\"80px\",\r\n                position:\"absolute\",\r\n                top:-10})\r\n                hidden({...hid,display:\"block\"})\r\n              }else{\r\n                updatedStyleNav({...initialStyleNav,backgroundColor:\"transparent\"})\r\n                hidden({...hid,display:\"none\"})\r\n                updatedStyleA({...initialStyle,  width:\"120px\",\r\n                position:\"absolute\",\r\n                top:-10})\r\n              }\r\n            }\r\n              // darkmode\r\n         \r\n            \r\n    return(\r\n        <>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n \r\nexport default Nav;"]},"metadata":{},"sourceType":"module"}