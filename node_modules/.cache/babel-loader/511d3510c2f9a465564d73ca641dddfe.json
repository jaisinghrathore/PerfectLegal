{"ast":null,"code":"var _jsxFileName = \"F:\\\\Tanu\\\\my-app\\\\src\\\\LocalStore.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Local = () => {\n  _s();\n\n  const [init, upda] = useState(\"black\");\n\n  const black = () => {\n    upda(\"black\");\n  };\n\n  const white = () => {\n    upda(\"white\");\n  };\n\n  const green = () => {\n    upda(\"green\");\n  };\n\n  localStorage.setItem('data', init);\n  const va = localStorage.getItem('data');\n  useEffect(() => {\n    alert(va);\n\n    if (va == \"black\") {\n      return require('./dark.css');\n    } else if (va == \"white\") {\n      return require('./light.css');\n    } else {\n      require('./green.css');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" localStorage color is \", va, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: black,\n      children: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: white,\n      children: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: green,\n      children: \"green\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Local, \"1kIU22dxJZpUM6q+l04v7jqhx7g=\");\n\n_c = Local;\nexport default Local;\n\nvar _c;\n\n$RefreshReg$(_c, \"Local\");","map":{"version":3,"sources":["F:/Tanu/my-app/src/LocalStore.jsx"],"names":["React","useState","useEffect","Local","init","upda","black","white","green","localStorage","setItem","va","getItem","alert","require"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAAyC,OAAzC;;;;AAGA,MAAMC,KAAK,GAAC,MAAI;AAAA;;AAEZ,QAAK,CAACC,IAAD,EAAMC,IAAN,IAAYJ,QAAQ,CAAC,OAAD,CAAzB;;AAGA,QAAMK,KAAK,GAAC,MAAI;AACZD,IAAAA,IAAI,CAAC,OAAD,CAAJ;AACH,GAFD;;AAIA,QAAME,KAAK,GAAC,MAAI;AACZF,IAAAA,IAAI,CAAC,OAAD,CAAJ;AAEH,GAHD;;AAKA,QAAMG,KAAK,GAAC,MAAI;AACZH,IAAAA,IAAI,CAAC,OAAD,CAAJ;AAEH,GAHD;;AAMAI,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BN,IAA5B;AAEA,QAAMO,EAAE,GAACF,YAAY,CAACG,OAAb,CAAqB,MAArB,CAAT;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,KAAK,CAACF,EAAD,CAAL;;AACA,QAAIA,EAAE,IAAE,OAAR,EAAiB;AACb,aACAG,OAAO,CAAC,YAAD,CADP;AAGH,KAJD,MAIM,IAAGH,EAAE,IAAE,OAAP,EAAe;AACjB,aACIG,OAAO,CAAC,aAAD,CADX;AAGH,KAJK,MAID;AACDA,MAAAA,OAAO,CAAC,aAAD,CAAP;AAEH;AACF,GAdM,CAAT;AAgBA,sBACI;AAAA,4BACA;AAAA,4CAA4BH,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAQ,MAAA,OAAO,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAQ,MAAA,OAAO,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBADJ;AAQH,CAhDD;;GAAML,K;;KAAAA,K;AAkDN,eAAeA,KAAf","sourcesContent":["import React , {useState,useEffect} from 'react';\r\n\r\n\r\nconst Local=()=>{\r\n\r\n    const[init,upda]=useState(\"black\");\r\n\r\n\r\n    const black=()=>{\r\n        upda(\"black\");\r\n    }\r\n\r\n    const white=()=>{\r\n        upda(\"white\");\r\n        \r\n    }\r\n\r\n    const green=()=>{\r\n        upda(\"green\");\r\n        \r\n    }\r\n\r\n    \r\n    localStorage.setItem('data',init);\r\n\r\n    const va=localStorage.getItem('data');\r\n\r\n    useEffect(() => {\r\n        alert(va);\r\n        if( va==\"black\" ){\r\n            return(\r\n            require('./dark.css')\r\n            )\r\n        }else if(va==\"white\"){\r\n            return(\r\n                require('./light.css')\r\n                )\r\n        }else{\r\n            require('./green.css')\r\n\r\n        }\r\n      });\r\n\r\n    return(\r\n        <>\r\n        <h1> localStorage color is {va} </h1>      \r\n        <button onClick={black}>black</button>\r\n        <button onClick={white}>white</button>\r\n        <button onClick={green}>green</button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Local;"]},"metadata":{},"sourceType":"module"}